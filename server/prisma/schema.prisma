datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  role      String   @default("user")
  cars      Car[]
  cart      Cart?
  orders    Order[]
  reviews   Review[]
}

model Dealer {
  id       Int    @id @default(autoincrement())
  name     String @unique
  location String
  phone    String
  email    String @unique
  cars     Car[]
}

model Car {
  id            Int      @id @default(autoincrement())
  make          String
  model         String
  year          Int
  price         Float
  hireRate      Float
  type          String
  image         String
  mileage       Int
  location      String
  condition     String
  transmission  String
  fuelType      String
  averageRating Float    @default(0)
  features      String
  dealer        Dealer   @relation(fields: [dealerId], references: [id])
  dealerId      Int
  createdBy     User     @relation(fields: [createdById], references: [id])
  createdById   Int
  cartItems     CartItem[]
  orderItems    OrderItem[]
  reviews       Review[]
}

model Cart {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  items     CartItem[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    Int
  car       Car      @relation(fields: [carId], references: [id])
  carId     Int
  type      String
  quantity  Int
}

model Order {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  totalAmount Float
  status      String   @default("PENDING")
  createdAt   DateTime @default(now())
  items       OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  car       Car      @relation(fields: [carId], references: [id])
  carId     Int
  type      String
  price     Float
}

model Review {
  id        Int      @id @default(autoincrement())
  rating    Int
  comment   String
  car       Car      @relation(fields: [carId], references: [id])
  carId     Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}
